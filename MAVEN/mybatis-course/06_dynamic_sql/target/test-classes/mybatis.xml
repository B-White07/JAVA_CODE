<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--    指定properties文件的位置，从类路径跟开始找文件-->
    <properties resource="jdbc.properties"></properties>
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

<!--    定义别名-->
    <typeAliases>
<!--        
                第一种方式：
                       可以指定一个类型的一个自定义别名
                        type：自定义类型的全限定名称
                        alias：别名
-->
<!--        <typeAlias type="com.lzw.vo.ViewStudent" alias="vstu"></typeAlias>
        <typeAlias type="com.lzw.domain.Student" alias="stu"></typeAlias>-->
        
<!--          第二种方式：
                        <package>   name是包名，这个包中的所有类，类名就是别名（类名不区分大小写）
-->
        <package name="com.lzw.domain"/>
        <package name="com.lzw.vo"/>
    </typeAliases>

<!--    配置插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
    </plugins>

    <environments default="mydev">
        <environment id="mydev">
<!--            transactionManager:mybatis提交事务，回滚事务的方式
                        type：事务的处理的类型
                                    1.JDBC：表示mybatis底层是调用JDBC中的Connection对象的commit，rollback
                                    2.MANAGED：把mybatis的事务处理委托给其他容器（一个服务容器软件，一个框架（spring））
-->
            <transactionManager type="JDBC"/>
<!--            dataSource：表示数据源，java体系中，规定实现了javax.sql.DataSource接口的都是数据源
                                        数据源表示连接Connection对象的。
                  type：指定数据源的类型
                            1.POOLED：使用连接池，mybatis会创建PooledDataSource类
                            2.UNPOOLED：不使用连接池，在每次执行sql语句时，先创建连接，执行sql，再关闭连接
                                                        mybatis会创建一个UnPooledDataSource，管理Connection对象的使用
                            3.JUDI：java命名和目录服务（windows注册表）
-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
<!--        第一种方式：指定多个mapper文件-->
<!--        <mapper resource="com/lzw/dao/StudentDao.xml"/>
        <mapper resource="com/lzw/dao/OrderDao.xml"/>-->

<!--        第二种方式：使用包名
               name：xml文件（mapper文件）所在的包名，这个包中的所有xml文件一次都能加载给mybatis
               使用package的要求：
                    1.mapper文件名称需要和接口名称一样，区分大小写
                    2.mapper文件和dao接口需要在同一目录
-->
        <package name="com.lzw.dao"/>
    </mappers>
</configuration>
